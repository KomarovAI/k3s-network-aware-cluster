#!/bin/bash
# WSL2 Compatibility Fixes for K3S Network-Aware Cluster
# –ê–≤—Ç–æ—Ä: AI DevOps Assistant
# –î–∞—Ç–∞: 2025-11-01

set -e

echo "üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è WSL2..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ WSL2
if ! grep -q "microsoft" /proc/version 2>/dev/null; then
    echo "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è WSL2. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    exit 0
fi

echo "‚úÖ WSL2 –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –ø—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

# 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Flannel backend (VXLAN –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ WSL2)
echo "üåê –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º Flannel —Å VXLAN –Ω–∞ host-gw..."

# –û–±–Ω–æ–≤–ª—è–µ–º systemd —Å–µ—Ä–≤–∏—Å
if [ -f /etc/systemd/system/k3s.service ]; then
    sudo sed -i 's/--flannel-backend=vxlan/--flannel-backend=host-gw/g' /etc/systemd/system/k3s.service
fi

if [ -f /etc/systemd/system/k3s-agent.service ]; then
    sudo sed -i 's/--flannel-backend=vxlan/--flannel-backend=host-gw/g' /etc/systemd/system/k3s-agent.service
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π flannel subnet.env
echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π flannel subnet.env..."
sudo mkdir -p /run/flannel
echo "FLANNEL_NETWORK=10.42.0.0/16" | sudo tee /run/flannel/subnet.env
echo "FLANNEL_SUBNET=10.42.0.1/24" | sudo tee -a /run/flannel/subnet.env
echo "FLANNEL_MTU=1450" | sudo tee -a /run/flannel/subnet.env
echo "FLANNEL_IPMASQ=true" | sudo tee -a /run/flannel/subnet.env

# 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º mount propagation –¥–ª—è node-exporter
echo "üíæ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º mount propagation..."
sudo mkdir -p /var/lib/rancher/k3s/storage
sudo chmod 755 /var/lib/rancher/k3s/storage

# 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º hostPath volumes –¥–ª—è stateful workloads
echo "üóÇÔ∏è –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è hostPath volumes..."
sudo mkdir -p /mnt/{mysql-data,grafana-data,prometheus-data}
sudo chmod 755 /mnt/{mysql-data,grafana-data,prometheus-data}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã
sudo chown -R 999:999 /mnt/mysql-data 2>/dev/null || true  # MySQL user
sudo chown -R 472:472 /mnt/grafana-data 2>/dev/null || true  # Grafana user
sudo chown -R 65534:65534 /mnt/prometheus-data 2>/dev/null || true  # nobody user

# 4. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º kernel –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è WSL2
echo "‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º kernel –ø–∞—Ä–∞–º–µ—Ç—Ä—ã..."

# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã
echo 'fs.file-max = 1048576' | sudo tee -a /etc/sysctl.conf
echo 'fs.nr_open = 1048576' | sudo tee -a /etc/sysctl.conf

# –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å–µ—Ç–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
echo 'net.core.somaxconn = 32768' | sudo tee -a /etc/sysctl.conf
echo 'net.core.rmem_default = 262144' | sudo tee -a /etc/sysctl.conf
echo 'net.core.wmem_default = 262144' | sudo tee -a /etc/sysctl.conf

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
sudo sysctl -p 2>/dev/null || true

# 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º iptables –¥–ª—è WSL2
echo "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º iptables –¥–ª—è WSL2..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º iptables-legacy vs iptables-nft
if command -v iptables-legacy >/dev/null; then
    sudo update-alternatives --set iptables /usr/sbin/iptables-legacy 2>/dev/null || true
    sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy 2>/dev/null || true
fi

# 6. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º K3S —Å–µ—Ä–≤–∏—Å—ã..."
sudo systemctl daemon-reload

if systemctl is-active k3s >/dev/null 2>&1; then
    sudo systemctl restart k3s
    echo "‚úÖ K3S master –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
fi

if systemctl is-active k3s-agent >/dev/null 2>&1; then
    sudo systemctl restart k3s-agent
    echo "‚úÖ K3S agent –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
fi

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo "üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."

sleep 10

if command -v kubectl >/dev/null; then
    echo "üìä –°—Ç–∞—Ç—É—Å –Ω–æ–¥ –∫–ª–∞—Å—Ç–µ—Ä–∞:"
    kubectl get nodes -o wide 2>/dev/null || echo "‚ö†Ô∏è kubectl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∑–∂–µ"
    
    echo "üìä –°—Ç–∞—Ç—É—Å flannel –ø–æ–¥–æ–≤:"
    kubectl get pods -A | grep flannel 2>/dev/null || echo "‚ö†Ô∏è Flannel –ø–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo ""
echo "‚úÖ WSL2 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo "üìã –ü—Ä–∏–º–µ–Ω–µ–Ω–æ:"
echo "   - Flannel –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ host-gw backend"
echo "   - –°–æ–∑–¥–∞–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è hostPath volumes"
echo "   - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã kernel –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"
echo "   - –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã mount permissions"
echo "   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã iptables –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
echo ""
echo "üöÄ –ö–ª–∞—Å—Ç–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å WSL2!"
